// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForInsertMoves implements pgx.CopyFromSource.
type iteratorForInsertMoves struct {
	rows                 []InsertMovesParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertMoves) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertMoves) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].GameID,
		r.rows[0].MoveNumber,
		r.rows[0].MoveNotation,
		r.rows[0].Orig,
		r.rows[0].Dest,
		r.rows[0].MoveFen,
		r.rows[0].TimeLeft,
	}, nil
}

func (r iteratorForInsertMoves) Err() error {
	return nil
}

func (q *Queries) InsertMoves(ctx context.Context, arg []InsertMovesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"moves"}, []string{"game_id", "move_number", "move_notation", "orig", "dest", "move_fen", "time_left"}, &iteratorForInsertMoves{rows: arg})
}
